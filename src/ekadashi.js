/* eslint no-restricted-syntax: "off" */

import fs from 'fs';
import _ from 'lodash';
import d from 'date-and-time';

const monthsEn = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
const monthsUa = ['—Å—ñ—á–Ω—è', '–ª—é—Ç–æ–≥–æ', '–±–µ—Ä–µ–∑–Ω—è', '–∫–≤—ñ—Ç–Ω—è', '—Ç—Ä–∞–≤–Ω—è', '—á–µ—Ä–≤–Ω—è', '–ª–∏–ø–Ω—è', '—Å–µ—Ä–ø–Ω—è', '–≤–µ—Ä–µ—Å–Ω—è', '–∂–æ–≤—Ç–Ω—è', '–ª–∏—Å—Ç–æ–ø–∞–¥–∞', '–≥—Ä—É–¥–Ω—è'];

const ekadashiMap = {
  Putrada: '–ü—É—Ç—Ä–∞–¥–∞',
  'Sat-tila': '–®–∞—Ç-—Ç—ñ–ª–∞',
  Bhaimi: '–ë—Ö–∞–π–º—ñ',
  Vijaya: '–í—ñ–¥–∂–∞—è',
  Amalaki: '–ê–º–∞–ª–∞–∫—ñ',
  Papamocani: '–ü–∞–ø–∞–º–æ—á–∞–Ω—ñ',
  Kamada: '–ö–∞–º–∞–¥–∞',
  Varuthini: '–í–∞—Ä—É—Ç—Ö—ñ–Ω—ñ',
  Mohini: '–ú–æ—Ö—ñ–Ω—ñ',
  Apara: '–ê–ø–∞—Ä–∞',
  Pandava: '–ü–∞–Ω–¥–∞–≤–∞',
  Yogini: '–ô–æ–≥—ñ–Ω—ñ',
  Sayana: '–®–∞—è–Ω–∞',
  Kamika: '–ö–∞–º—ñ–∫–∞',
  Padmini: '–ü–∞–¥–º—ñ–Ω—ñ',
  Parama: '–ü–∞—Ä–∞–º–∞',
  Pavitraropana: '–ü–∞–≤—ñ—Ç—Ä–æ–ø–∞–Ω–∞',
  Annada: '–ê–Ω–Ω–∞–¥–∞',
  Parsva: '–ü–∞—Ä—à–≤–∞',
  Indira: '–Ü–Ω–¥—ñ—Ä–∞',
  Pasankusa: '–ü–∞—à–∞–Ω–∫—É—à–∞',
  Rama: '–†–∞–º–∞',
  Utthana: '–£—Ç—Ç—Ö–∞–Ω–∞',
  Utpanna: '–£—Ç–ø–∞–Ω–Ω–∞',
  Moksada: '–ú–æ–∫—à–∞–¥–∞',
};

const getDays = (data) => {
  const lines = data.split('\n');
  const [kw1, kw2, kw3] = ['(suitable for fasting)', 'Fasting for', 'Break fast'];
  const filtered = lines.filter((l) => (l.includes(kw1)
    || l.includes(kw2)
    || l.includes(kw3)))
    .map((l) => l.trim());
  const groupped = _.chunk(filtered, 3);
  const ekadashi = groupped.map(([dateLine, nameLine, feastLine]) => {
    const [day, month, year] = dateLine.substring(0, 11).trim().split(' ');
    const monthId = monthsEn.indexOf(month);
    const fastDate = new Date(year, monthId, day);
    const feastDate = d.addDays(fastDate, 1);
    const [, , nameEn] = nameLine.split(' ');
    const name = ekadashiMap[nameEn];
    const feastStart = feastLine.substring(11, 16);
    const index = feastLine.indexOf(' - ');
    const feastFinish = feastLine.substring(index + 3, index + 8);
    return {
      monthId,
      fastDate,
      feastDate,
      name,
      feastStart,
      feastFinish,
    };
  });

  return ekadashi;
};

const getMessages = (ekadashiList) => ekadashiList.map((e) => '–•–∞—Ä–µ –ö—Ä—ñ—à–Ω–∞, –¥–æ—Ä–æ–≥—ñ –≤—ñ–¥–¥–∞–Ω—ñ üôè\n\n'
  + `–ó–∞–≤—Ç—Ä–∞, ${e.fastDate.getDate()} ${monthsUa[e.fastDate.getMonth()]}, `
  + `–ø—ñ—Å—Ç –∑–∞ **${e.name}** –µ–∫–∞–¥–∞—à—ñ __(–ø—ñ—Å—Ç –Ω–∞ –∑–µ—Ä–Ω–æ —Ç–∞ –±–æ–±–∏)__.\n\n`
  + `–í–∏—Ö—ñ–¥ –∑ –ø–æ—Å—Ç—É ${e.feastDate.getDate()} ${monthsUa[e.feastDate.getMonth()]} `
  + `–∑ **${e.feastStart}** –¥–æ **${e.feastFinish}** –∑–∞ –∫–∏—ó–≤—Å—å–∫–∏–º —á–∞—Å–æ–º\n\n`
  + '#–µ–∫–∞–¥–∞—à—ñ');

const data = fs.readFileSync('/home/max/p/ekadashi/calendars/ekadashi2023.txt', 'utf8');
const ekadashi = getDays(data);
const messages = getMessages(ekadashi);
const content = messages.join('\n\n\n\n');
fs.writeFileSync('/home/max/p/ekadashi/result.txt', content);
